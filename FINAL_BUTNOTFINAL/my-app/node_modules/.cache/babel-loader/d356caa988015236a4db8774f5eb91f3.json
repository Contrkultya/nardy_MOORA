{"remainingRequest":"C:\\Users\\UserPC\\Desktop\\VUE PROJECT\\my-app\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\UserPC\\Desktop\\VUE PROJECT\\my-app\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\UserPC\\Desktop\\VUE PROJECT\\my-app\\src\\main.js","dependencies":[{"path":"C:\\Users\\UserPC\\Desktop\\VUE PROJECT\\my-app\\src\\main.js","mtime":1556489388778},{"path":"C:\\Users\\UserPC\\Desktop\\VUE PROJECT\\my-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\UserPC\\Desktop\\VUE PROJECT\\my-app\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\UserPC\\Desktop\\VUE PROJECT\\my-app\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"C:\\\\Users\\\\UserPC\\\\Desktop\\\\VUE PROJECT\\\\my-app\\\\node_modules\\\\core-js\\\\modules\\\\es6.array.iterator.js\";\nimport \"C:\\\\Users\\\\UserPC\\\\Desktop\\\\VUE PROJECT\\\\my-app\\\\node_modules\\\\core-js\\\\modules\\\\es6.promise.js\";\nimport \"C:\\\\Users\\\\UserPC\\\\Desktop\\\\VUE PROJECT\\\\my-app\\\\node_modules\\\\core-js\\\\modules\\\\es6.object.assign.js\";\nimport \"C:\\\\Users\\\\UserPC\\\\Desktop\\\\VUE PROJECT\\\\my-app\\\\node_modules\\\\core-js\\\\modules\\\\es7.promise.finally.js\";\nimport Vue from 'vue';\nimport \"./plugins/vuetify\";\nimport App from \"./App.vue\";\nVue.config.productionTip = false;\nnew Vue({\n  render: function render(h) {\n    return h(App);\n  }\n}).$mount('#app');\n\nvar _JSON$parse, _JSON$parse2;\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _toArray(arr) {\n  return Array.isArray(arr) ? arr : Array.from(arr);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n} //Хранилище с огромным хуищем, обратиться можно, используя свойство \"store\"\n\n\nvar store = new Vuex.Store({\n  state: {\n    todos: [{\n      \"id\": 1,\n      \"name\": \"Доска 1\",\n      \"hasChildren\": true,\n      \"done\": false,\n      \"removed\": false\n    }, {\n      \"id\": 2,\n      \"parent\": 1,\n      \"name\": \"Список задач 1.1\",\n      \"hasChildren\": true,\n      \"done\": false,\n      \"removed\": false,\n      \"description\": \"Сделать removeKebab 2.0\"\n    }, {\n      \"id\": 3,\n      \"parent\": 2,\n      \"name\": \"Задача 1.1.1\",\n      \"done\": false,\n      \"removed\": false,\n      \"description\": \"Сделать removeAutism\"\n    }, {\n      \"id\": 4,\n      \"parent\": 2,\n      \"name\": \"Задача 1.1.2\",\n      \"done\": true,\n      \"removed\": false,\n      \"description\": \"Сделать vue\"\n    }, {\n      \"id\": 9,\n      \"parent\": 2,\n      \"name\": \"Задача 1.1.3\",\n      \"done\": false,\n      \"removed\": false,\n      \"description\": \"Заработать тут чекбох\"\n    }, {\n      \"id\": 5,\n      \"parent\": 1,\n      \"name\": \"Список задач 1.2\",\n      \"hasChildren\": true,\n      \"done\": false,\n      \"removed\": false\n    }, {\n      \"id\": 6,\n      \"parent\": 5,\n      \"name\": \"Задача 1.2.1\",\n      \"done\": false,\n      \"removed\": false\n    }, {\n      \"id\": 7,\n      \"parent\": 5,\n      \"name\": \"Задача 1.2.2\",\n      \"done\": false,\n      \"removed\": false\n    }, {\n      \"id\": 8,\n      \"parent\": 1,\n      \"name\": \"Список задач 1.3\",\n      \"done\": false,\n      \"removed\": false,\n      \"description\": \"Радоваться жизни\"\n    }, {\n      \"id\": 10,\n      \"name\": \"Доска 2\",\n      \"done\": false,\n      \"removed\": false\n    }],\n    currentId: 0\n  },\n  getters: {\n    getTodoById: function getTodoById(state) {\n      return function (id) {\n        return state.todos.find(function (todo) {\n          return todo.id === id;\n        });\n      };\n    },\n    todosCount: function todosCount(state) {\n      return state.todos.length;\n    },\n    currentId: function currentId(state) {\n      return state.currentId;\n    } //прописать методы взаимодействия \n\n  },\n  mutations: {\n    setCurrentId: function setCurrentId(state, id) {\n      state.currentId = id; //прописать мутации и коммиты\n    },\n    newNote: function newNote(state, note) {\n      state.todos.push(note);\n    },\n    delNote: function delNote(state, id) {\n      state.todos.splice(state.todos.find(function (todo) {\n        return todo.id === id;\n      }), 1);\n    }\n  },\n  actions: {//добавить асинхронности\n  }\n});\nconsole.log(store.getters.getTodoById(0));\nconsole.log(store.getters.todosCount);\nconsole.log(store.getters.currentId);\nstore.commit('setCurrentId', 1);\nconsole.log(store.getters.currentId);\n/**store.getters.getTodoById(i)\n * @class\n * @name obj\n * @description Класс obj — основная база для взаимодействия с объектами. Присутствует конструктор, методы чтения, обновления, удаления.\n * @property {method} read\n * @property {method} update\n * @property {method} delete\n * @property {method} checkRemove\n * @property {method} changeDone\n * @extends\n * @author narDy_MOORA\n * @public\n*/\n\nvar obj = function () {\n  function obj(id, parent, name, hasChildren, removed, done, description) {\n    _classCallCheck(this, obj);\n\n    this._id = id;\n    this._parent = parent;\n    this._name = name;\n    this._hasChildren = hasChildren;\n    this._removed = removed;\n    this._done = done;\n    this._description = description;\n  }\n\n  _createClass(obj, [{\n    key: 'read',\n\n    /**\n     * @method\n     * @memberof obj\n     * @name read\n     * @description Производит чтение всех свойств элемента, если передан ключ, производит чтение определённого свойства объекта.\n     * @param {undefined | string} key не содержит|содержит в себе имя ключа;\n     * @returns {undefined | null | string} undefined — если объект помечен на удаление;\n     * Если переданного ключа не существует, то возвращает null;\n     * Если, передан без ключа, то строку, содержащую в себе ключи элемента;\n    */\n    value: function read(key) {\n      if (this.checkRemove()) return undefined;else {\n        if (key === undefined) {\n          return this._name + '; ' + this._parent + '; ' + this._id + '; ' + this._hasChildren + '; ' + this._done + '; \\n' + this._description;\n        } else if (key == 'id') {\n          return this._id;\n        } else if (key == 'parent') {\n          return this._parent;\n        } else if (key == 'name') {\n          return this._name;\n        } else if (key == 'hasChildren') {\n          return this._hasChildren;\n        } else if (key == 'removed') {\n          return this._removed;\n        } else if (key == 'done') {\n          return this._done;\n        } else if (key == 'description') {\n          return this._description;\n        } else return null;\n      }\n    }\n    /**\n     * @method\n     * @memberof obj\n     * @name update\n     * @description Получает обновлённый объект и изменяет ключи на ключи полученного объекта.\n     * @param {object} updObj обновлённый объект;\n     */\n\n  }, {\n    key: 'update',\n    value: function update(updObj) {\n      if (this.checkRemove()) {\n        return undefined;\n      } else Object.assign(this, updObj);\n    }\n    /**\n     * @method\n     * @memberof obj\n     * @name delete\n     * @description Помечает объект на удаление, после этого он выводиться в списках не будет.\n     */\n\n  }, {\n    key: 'delete',\n    value: function _delete() {\n      this._removed = true;\n    }\n    /**\n     * @method\n     * @memberof obj\n     * @name checkRemove\n     * @description Метод, проверяющий помечен ли объект на удаление, или нет.\n     * @return {bool};\n     */\n\n  }, {\n    key: 'checkRemove',\n    value: function checkRemove() {\n      if (this._removed) return true;else return false;\n    }\n    /**\n     * @method\n     * @memberof obj\n     * @name changeDone\n     * @description Изменяет состояние завершённости объекта. (Завершён/Не завершён);\n     */\n\n  }, {\n    key: 'changeDone',\n    value: function changeDone() {\n      if (this.checkRemove()) {\n        return undefined;\n      } else if (this._done) {\n        this._done = false;\n      } else this._done = true;\n    }\n  }, {\n    key: 'id',\n    get: function get() {\n      return this._id;\n    },\n    set: function set(id) {\n      this._id = id;\n    }\n  }, {\n    key: 'parent',\n    get: function get() {\n      return this._parent;\n    },\n    set: function set(parentId) {\n      this._parent = parentId;\n    }\n  }, {\n    key: 'name',\n    get: function get() {\n      return this._name;\n    },\n    set: function set(name) {\n      this._name = name;\n    }\n  }, {\n    key: 'hasChildren',\n    get: function get() {\n      return this._hasChildren;\n    },\n    set: function set(haveBool) {\n      this._hasChildren = haveBool;\n    }\n  }, {\n    key: 'removed',\n    get: function get() {\n      return this._removed;\n    },\n    set: function set(haveBool) {\n      this._removed = haveBool;\n    }\n  }, {\n    key: 'done',\n    get: function get() {\n      return this._done;\n    },\n    set: function set(haveBool) {\n      this._done = haveBool;\n    }\n  }, {\n    key: 'description',\n    get: function get() {\n      return this._description;\n    },\n    set: function set(setDesc) {\n      this._description = setDesc;\n    }\n  }]);\n\n  return obj;\n}();\n\nfunction close(id) {\n  document.getElementById(id).innerHTML = \"\";\n}\n\nvar bankLogic = new Vue({\n  data: {\n    data: (_JSON$parse = JSON.parse('[{ \"id\": 1,\"name\": \"Доска 1\",\"hasChildren\": true, \"done\": false, \"removed\": false},{\"id\": 2,\"parent\": 1,\"name\": \"Список задач 1.1\",\"hasChildren\": true, \"done\": false, \"removed\": false, \"description\": \"Сделать removeKebab 2.0\"},{ \"id\": 3,\"parent\": 2,\"name\": \"Задача 1.1.1\", \"done\": false, \"removed\": false, \"description\": \"Сделать removeAutism\"},{ \"id\": 4,\"parent\": 2,\"name\": \"Задача 1.1.2\", \"done\": true, \"removed\": false, \"description\": \"Сделать vue\"},{ \"id\": 9,\"parent\": 2,\"name\": \"Задача 1.1.3\", \"done\": false, \"removed\": false, \"description\": \"Заработать тут чекбох\"},{\"id\": 5,\"parent\": 1,\"name\": \"Список задач 1.2\",\"hasChildren\": true,\"description\":\"Сыграть в нарды с Моором\", \"done\": false, \"removed\": false},{ \"id\": 6,\"parent\": 5,\"name\": \"Задача 1.2.1\" , \"done\": false, \"removed\": false, \"description\":\"Почему чванство?\"},{ \"id\": 7,\"parent\": 5,\"name\": \"Задача 1.2.2\", \"done\": false, \"removed\": false, \"description\":\"Помогите\"},{\"id\": 8,\"parent\": 1,\"name\": \"Список задач 1.3\", \"done\": false, \"removed\": false, \"description\": \"Радоваться жизни\"},{\"id\": 10,\"name\": \"Доска 2\", \"done\": false, \"removed\": false}]'), _JSON$parse2 = _toArray(_JSON$parse), _JSON$parse),\n    counter: 0,\n    _currentId: 0\n  },\n  methods: {\n    counterUp: function counterUp() {\n      return this.counter++;\n    },\n    counterReset: function counterReset() {\n      this.counter = 0;\n    },\n    currentId: {\n      get: function get() {\n        return this._currentId;\n      },\n      set: function set(receivedId) {\n        this._currentId = receivedId;\n      }\n    }\n  }\n});\nvar object;\n/**\n * @function\n * @name objBuilder_file\n * @description Строит объект из полученного JSON'а.\n * @param {number} ind индекс объекта;\n * @param {json} data передаваемый в функцию JSON;\n * @param {number} setid хранит в себе введённый идентификатор;\n * @param {number} setparent хранит в себе введённое значение;\n * @param {string} setname хранит в себе введённое имя;\n * @param {bool} hasChildren хранит в себе информацию о наличии дочерних элементов;\n * @param {bool} setremoved хранит в себе информацию о наличии «удаления»;\n * @public\n */\n\nfunction new_objBuilder_file(ind) {\n  object = [];\n  var i = 1;\n  var m = 1;\n\n  for (i; i < store.getters.todosCount + 1; i++) {\n    if (store.getters.getTodoById(i).parent == ind) {\n      var element = new Vue({\n        data: {\n          setid: store.getters.getTodoById(i).id,\n          setparent: store.getters.getTodoById(i).parent,\n          setname: store.getters.getTodoById(i).name,\n          hasChildren: store.getters.getTodoById(i).hasChildren,\n          setremoved: store.getters.getTodoById(i).removed,\n          setdone: store.getters.getTodoById(i).done,\n          setDesc: store.getters.getTodoById(i).description\n        }\n      });\n      object[m] = element;\n      m++;\n    }\n  }\n}\n\nfunction add(ind) {\n  var newid = store.getters.todosCount + 1;\n  var style = prompt(\"Введите название нового элемента:\");\n  var element = [];\n  var setid = newid;\n  var setname = style;\n  var setparent = ind;\n  var hasChildren = 'false';\n  var setremoved = 'false';\n  var setdone = 'false';\n  var setDesc = \"New element\";\n  element = new obj(setid, setparent, setname, hasChildren, setremoved, setdone, setDesc);\n  store.commit('newNote', element);\n  getChildren(new_objBuilder_file(ind));\n}\n/**\n * @function\n * @name load\n * @description «Функция-сразу» — выполняется, как только завершилась загрузка HTML-страницы.\n * Данная функция строит маркированный список из глобальной переменной data, добавляя кнопки удовлетворяющие различным условиям элементов;\n * Нажатия кнопок вызывают функции-цепочки, которые получают дальнейшие дочерние элементы, если они имеются;\n */\n\n\nfunction load() {\n  document.getElementById(\"boardList\").innerHTML += \"<ul>\";\n  var i = 1;\n  console.log(store.getters.todosCount);\n  console.log(store.getters.getTodoById(3));\n\n  for (i; i < store.getters.todosCount + 1; i++) {\n    /** Выводит на страницу родительские элементы */\n    if (store.getters.getTodoById(i).parent == undefined) {\n      /** Добавляет кнопку изменения стиля */\n      document.getElementById(\"boardList\").innerHTML += \"<div class='desks' style='height:auto;' id='\" + store.getters.getTodoById(i).id + \"d\" + \"'>\" + store.getters.getTodoById(i).name +\n      /** Списковый вывод имени */\n      //Пока не трогать \"<label><div class='greenCheck'><img src= 'content\\\\nar_yes.svg' onClick='doneChanger(\" + bankLogic.data[i].id + \")'></div></label>\" +/** Checkbox выполнения */\n      //\"<label><div class='redCheck'><img src= 'content\\\\nar_no.svg' onClick='deleteChanger(\" + bankLogic.data[i].id + \")'></div></label>\" + /** Checkbox удаления */\n      \"<button onClick='render(\" + store.getters.getTodoById(i).id + \")'>Изменить стиль</button></div>\";\n      /** Кнопка изменения стиля */\n\n      /** Если иммеет дочерние элементы, добавляет кнопку получения элементов. */\n\n      if (store.getters.getTodoById(i).hasChildren == true) {\n        document.getElementById(store.getters.getTodoById(i).id + \"d\").innerHTML += \"<button onClick='res(\" + store.getters.getTodoById(i).id + \")'>Открыть</button><button onClick='closeList.close(\" + '\"dot_' + store.getters.getTodoById(i).id + '\"' + \")'>Закрыть</button></button><div style='margin:0 auto;' id='\" + \"dot_\" + store.getters.getTodoById(i).id + \"'></div>\";\n      }\n    }\n  }\n}\n/**\n * @function\n * @name render\n * @description Функция-управлятор — благодаря ей, пользователь может изменять стили определённого элемента в списке.\n * @param {number} x идентификатор эемента;\n */\n\n\nfunction render(x) {\n  var style = prompt(\"Введите стиль:\");\n  document.getElementById(x).setAttribute(\"style\", style);\n}\n/**\n * Документация скоро будет~\n */\n\n\nfunction res(id) {\n  document.getElementById(\"dot_\" + id).innerText = \"Loading...\";\n  store.commit('setCurrentId', id);\n  var ind = store.getters.currentId;\n\n  if (store.getters.getTodoById(ind).parent == undefined) {\n    if (document.getElementById(store.getters.currentId + \"d\").style.height == 'auto') {\n      document.getElementById(store.getters.currentId + \"d\").style.height = 'auto';\n      loadChildren(store.getters.currentId).then(getChildren);\n    } else {\n      document.getElementById(store.getters.currentId + \"d\").style.height = '0';\n      document.getElementById(\"dot_\" + store.getters.currentId).innerHTML = \"\";\n      return;\n    }\n  } else {\n    if (document.getElementById(\"p_\" + store.getters.currentId).style.height == 'auto') {\n      document.getElementById(\"p_\" + store.getters.currentId).style.height = 'auto';\n      loadChildren(store.getters.currentId).then(getChildren);\n    } else {\n      document.getElementById(\"p_\" + store.getters.currentId).style.height = '0';\n      document.getElementById(\"dot_\" + store.getters.currentId).innerHTML = \"\";\n      return;\n    }\n  }\n}\n\nfunction getChildren() {\n  //document.getElementById(\"dot_\"+object[0].setparent).innerHTML = \"\";\n  setTimeout(function () {\n    var meta = \"dot_\" + object[1].setparent;\n    document.getElementById(meta).innerText = \"\";\n    var i = 1;\n\n    for (i; i < object.length; i++) {\n      document.getElementById(meta).innerHTML += \"<div class='tasks' id=\" + \"p_\" + object[i].setid + \" style='height:auto;'>\" + \"<li id='\" + object[i].setid + \"'>\" + \"<span onClick='descriptionChanger(\" + object[i].setid + \")' >\" + object[i].setname + \"</span>\" +\n      /** Списковый вывод имени и щёлк*/\n      \"<label><div class='greenCheck'><img src='content\\\\nar_yes.svg' onClick='doneChanger(\" + object[i].setid + \")'></div></label>\" +\n      /** Checkbox выполнения */\n      \"<label><div class='redCheck'><img src='content\\\\nar_no.svg' onClick='deleteChanger(\" + object[i].setid + \")'></div></label>\" +\n      /** Checkbox удаления */\n      \"<button onClick='render(\" + object[i].setid + \")'>Изменить стиль</button>\" + \"</li>\" +\n      /** Кнопка изменения стиля */\n      \"<div id='\" + object[i].setid + \"description' class='descriptionLogic'ondblclick='descChanger.changeDescription(\" + object[i].setid + \")' style='display: none;'>\" + object[i].setDesc + \"</div></div>\";\n      /** Описание */\n\n      var check = object[i].hasChildren;\n      console.log(object[i].setid);\n\n      if (check == true) {\n        document.getElementById(\"p_\" + object[i].setid).innerHTML += \"<button onClick='res(\" + object[i].setid + \")'>Открыть</button><button onClick='add(\" + object[i].setid + \")'>Добавить</button><button onClick='closeList.close(\" + '\"dot_' + object[i].setid + '\"' + \")'>Закрыть</button><div style='margin:0 auto;margin-bottom:30px;' id='\" + (\"dot_\" + object[i].setid) + \"'></div><hr>\";\n      }\n    }\n  }, 1000);\n}\n\nfunction loadChildren(id) {\n  return new Promise(function (resolve, reject) {\n    var i = id;\n\n    for (i; i < store.getters.todosCount; i++) {\n      if (store.getters.getTodoById(i).hasChildren == true) {\n        resolve(new_objBuilder_file(store.getters.getTodoById(i).id));\n        return;\n      }\n    }\n  });\n}\n/**\n * @param {object} colorChecker\n * @description Надзиратель за цветом.\n * @param {number} counterArrays Счётчик массивов, связующее звено между массивом идентификаторов и массивом цветов.\n * @param {Array} idArray Числовой массив, хранит в себе идентификаторы.\n * @param {Array} currentColor Строковый массив, хранит в себе текущий цвет элемента, чей идентификатор находится на той же позиции в idArray.\n * @param {Array} colors Массив возможных цветов.\n * @property {method} masFinder\n * @property {method} changerColor\n * @protected\n * @public\n */\n\n\nvar colorChecker = new Vue({\n  data: {\n    counterArrays: 0,\n    idArray: [],\n    currentColor: [],\n    colors: [\"black\", \"green\", \"red\"]\n  },\n  methods: {\n    changerColor: function changerColor(id, whatColor) {\n      var i = 0;\n\n      for (i; i <= this.counterArrays; i++) {\n        if (this.idArray[i] == id) {\n          if (this.currentColor[i] == whatColor) {\n            this.currentColor[i] = \"black\";\n\n            if (whatColor == \"green\") {\n              store.getters.getTodoById(id).done = false;\n            } else {\n              store.getters.getTodoById(id).removed = false;\n            }\n\n            return document.getElementById(id.toString()).setAttribute(\"style\", \"color:black\");\n          } else if (this.currentColor[i] == \"black\") {\n            this.currentColor[i] = whatColor;\n\n            if (whatColor == \"green\") {\n              store.getters.getTodoById(id).done = true;\n            } else {\n              store.getters.getTodoById(id).removed = true;\n            }\n\n            return document.getElementById(id.toString()).setAttribute(\"style\", \"color: \" + whatColor);\n          } else {\n            if (this.currentColor[i] == \"green\") {\n              store.getters.getTodoById(id).done = false;\n              store.getters.getTodoById(id).removed = true;\n              document.getElementById(id.toString()).setAttribute(\"style\", \"color: \" + whatColor);\n            } else {\n              store.getters.getTodoById(id).done = true;\n              store.getters.getTodoById(id).removed = false;\n              document.getElementById(id.toString()).setAttribute(\"style\", \"color: \" + whatColor);\n            }\n\n            return this.currentColor[i] = whatColor;\n          }\n        } else if (i == this.counterArrays) {\n          this.idArray[this.counterArrays] = id;\n          this.currentColor[this.counterArrays] = whatColor;\n          this.counterArrays++;\n\n          if (whatColor == \"green\") {\n            store.getters.getTodoById(id).done = true;\n          } else {\n            store.getters.getTodoById(id).removed = true;\n          }\n\n          return document.getElementById(id.toString()).setAttribute(\"style\", \"color: \" + whatColor);\n        }\n      }\n    }\n  }\n});\n/**\n * @function\n * @name doneChanger\n * @description Событие, когда кликаешь на зелёные чекбоксы.\n * @param {number} x Идентификатор объекта.\n */\n\nfunction doneChanger(x) {\n  colorChecker.changerColor(x, \"green\");\n}\n\nvar closeList = new Vue({\n  methods: {\n    close: function close(id) {\n      document.getElementById(id).innerHTML = \"\";\n    }\n  }\n});\n/**\n * @function\n * @name deleteChanger\n * @description Событие, когда кликаешь на красные чекбоксы.\n * @param {number} x Идентификатор объекта.\n */\n\nfunction deleteChanger(x) {\n  colorChecker.changerColor(x, \"red\");\n}\n\nvar descChanger = {\n  arrCounter: 0,\n  openerArray: [],\n  boolArray: [],\n  descriptionLogic: function descriptionLogic(objectId) {\n    var i = 0;\n\n    while (i <= this.arrCounter) {\n      if (this.openerArray[i] == objectId) {\n        if (this.boolArray[i]) {\n          this.boolArray[i] = false;\n          return document.getElementById(objectId + 'description').style = \"display: none\";\n        } else {\n          this.boolArray[i] = true;\n          return document.getElementById(objectId + 'description').style = \"display: block\";\n        }\n      }\n\n      i++;\n    }\n\n    if (i > this.arrCounter) {\n      this.openerArray[this.arrCounter] = objectId;\n      this.boolArray[this.arrCounter] = true;\n      this.arrCounter++;\n      return document.getElementById(objectId + 'description').style = \"display: block\";\n    }\n  },\n  changeDescription: function changeDescription(id) {\n    var newDesc = prompt(\"Введите новое описание\");\n    store.getters.getTodoById(id).description = newDesc;\n    var idDesc = id + \"description\";\n    document.getElementById(idDesc).innerText = newDesc;\n  }\n};\n\nfunction descriptionChanger(objectId) {\n  descChanger.descriptionLogic(objectId);\n}",{"version":3,"sources":["C:\\Users\\UserPC\\Desktop\\VUE PROJECT\\my-app\\src\\main.js"],"names":["Vue","App","config","productionTip","render","h","$mount","_JSON$parse","_JSON$parse2","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_toArray","arr","Array","isArray","from","_classCallCheck","instance","TypeError","store","Vuex","Store","state","todos","currentId","getters","getTodoById","id","find","todo","todosCount","mutations","setCurrentId","newNote","note","push","delNote","splice","actions","console","log","commit","obj","parent","name","hasChildren","removed","done","description","_id","_parent","_name","_hasChildren","_removed","_done","_description","value","read","checkRemove","undefined","update","updObj","assign","_delete","changeDone","get","set","parentId","haveBool","setDesc","close","document","getElementById","innerHTML","bankLogic","data","JSON","parse","counter","_currentId","methods","counterUp","counterReset","receivedId","object","new_objBuilder_file","ind","m","element","setid","setparent","setname","setremoved","setdone","add","newid","style","prompt","getChildren","load","x","setAttribute","res","innerText","height","loadChildren","then","setTimeout","meta","check","Promise","resolve","reject","colorChecker","counterArrays","idArray","currentColor","colors","changerColor","whatColor","toString","doneChanger","closeList","deleteChanger","descChanger","arrCounter","openerArray","boolArray","descriptionLogic","objectId","changeDescription","newDesc","idDesc","descriptionChanger"],"mappings":"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","sourcesContent":["import Vue from 'vue'\nimport './plugins/vuetify'\nimport App from './App.vue'\n\nVue.config.productionTip = false\n\nnew Vue({\n  render: h => h(App),\n}).$mount('#app')\nvar _JSON$parse, _JSON$parse2;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toArray(arr) { return Array.isArray(arr) ? arr : Array.from(arr); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n//Хранилище с огромным хуищем, обратиться можно, используя свойство \"store\"\nconst store = new Vuex.Store({\n  state:{\n       todos: [\n       { \"id\": 1,\"name\": \"Доска 1\",\"hasChildren\": true, \"done\": false, \"removed\": false},\n       { \"id\": 2,\"parent\": 1,\"name\": \"Список задач 1.1\",\"hasChildren\": true, \"done\": false, \"removed\": false, \"description\": \"Сделать removeKebab 2.0\"},\n       { \"id\": 3,\"parent\": 2,\"name\": \"Задача 1.1.1\", \"done\": false, \"removed\": false, \"description\": \"Сделать removeAutism\"},\n       { \"id\": 4,\"parent\": 2,\"name\": \"Задача 1.1.2\", \"done\": true, \"removed\": false, \"description\": \"Сделать vue\"},\n       { \"id\": 9,\"parent\": 2,\"name\": \"Задача 1.1.3\", \"done\": false, \"removed\": false, \"description\": \"Заработать тут чекбох\"},\n       { \"id\": 5,\"parent\": 1,\"name\": \"Список задач 1.2\",\"hasChildren\": true, \"done\": false, \"removed\": false},\n       { \"id\": 6,\"parent\": 5,\"name\": \"Задача 1.2.1\" , \"done\": false, \"removed\": false},\n       { \"id\": 7,\"parent\": 5,\"name\": \"Задача 1.2.2\", \"done\": false, \"removed\": false },\n       { \"id\": 8,\"parent\": 1,\"name\": \"Список задач 1.3\", \"done\": false, \"removed\": false, \"description\": \"Радоваться жизни\"},\n       { \"id\": 10,\"name\": \"Доска 2\", \"done\": false, \"removed\": false}\n       ],\n       currentId: 0\n      },\n  getters: {\n    getTodoById: state => id => {\n    return state.todos.find(todo => todo.id === id);\n  },\n   todosCount: state => {\n    return state.todos.length;\n  },\n   currentId: state => {\n            return state.currentId;\n    },\n        \n      //прописать методы взаимодействия \n  },\n  mutations: {\n    setCurrentId(state, id){\n        state.currentId = id;\n      //прописать мутации и коммиты\n    },\n    newNote(state, note){\n        state.todos.push(note);\n    },\n    delNote(state, id){\n        state.todos.splice(state.todos.find(todo => todo.id === id), 1);\n    }\n  },\n  actions: {\n      //добавить асинхронности\n  },\n});\nconsole.log(store.getters.getTodoById(0));\nconsole.log(store.getters.todosCount);\nconsole.log(store.getters.currentId);\nstore.commit('setCurrentId', 1);\nconsole.log(store.getters.currentId);\n/**store.getters.getTodoById(i)\n * @class\n * @name obj\n * @description Класс obj — основная база для взаимодействия с объектами. Присутствует конструктор, методы чтения, обновления, удаления.\n * @property {method} read\n * @property {method} update\n * @property {method} delete\n * @property {method} checkRemove\n * @property {method} changeDone\n * @extends\n * @author narDy_MOORA\n * @public\n*/\nvar obj = function () {\n    function obj(id, parent, name, hasChildren, removed, done, description) {\n        _classCallCheck(this, obj);\n\n        this._id = id;\n        this._parent = parent;\n        this._name = name;\n        this._hasChildren = hasChildren;\n        this._removed = removed;\n        this._done = done;\n        this._description = description;\n    }\n\n    _createClass(obj, [{\n        key: 'read',\n\n        /**\n         * @method\n         * @memberof obj\n         * @name read\n         * @description Производит чтение всех свойств элемента, если передан ключ, производит чтение определённого свойства объекта.\n         * @param {undefined | string} key не содержит|содержит в себе имя ключа;\n         * @returns {undefined | null | string} undefined — если объект помечен на удаление;\n         * Если переданного ключа не существует, то возвращает null;\n         * Если, передан без ключа, то строку, содержащую в себе ключи элемента;\n        */\n        value: function read(key) {\n            if (this.checkRemove()) return undefined;else {\n                if (key === undefined) {\n                    return this._name + '; ' + this._parent + '; ' + this._id + '; ' + this._hasChildren + '; ' + this._done + '; \\n' + this._description;\n                } else if (key == 'id') {\n                    return this._id;\n                } else if (key == 'parent') {\n                    return this._parent;\n                } else if (key == 'name') {\n                    return this._name;\n                } else if (key == 'hasChildren') {\n                    return this._hasChildren;\n                } else if (key == 'removed') {\n                    return this._removed;\n                } else if (key == 'done') {\n                    return this._done;\n                } else if (key == 'description') {\n                    return this._description;\n                } else return null;\n            }\n        }\n        /**\n         * @method\n         * @memberof obj\n         * @name update\n         * @description Получает обновлённый объект и изменяет ключи на ключи полученного объекта.\n         * @param {object} updObj обновлённый объект;\n         */\n\n    }, {\n        key: 'update',\n        value: function update(updObj) {\n            if (this.checkRemove()) {\n                return undefined;\n            } else Object.assign(this, updObj);\n        }\n        /**\n         * @method\n         * @memberof obj\n         * @name delete\n         * @description Помечает объект на удаление, после этого он выводиться в списках не будет.\n         */\n\n    }, {\n        key: 'delete',\n        value: function _delete() {\n            this._removed = true;\n        }\n        /**\n         * @method\n         * @memberof obj\n         * @name checkRemove\n         * @description Метод, проверяющий помечен ли объект на удаление, или нет.\n         * @return {bool};\n         */\n\n    }, {\n        key: 'checkRemove',\n        value: function checkRemove() {\n            if (this._removed) return true;else return false;\n        }\n        /**\n         * @method\n         * @memberof obj\n         * @name changeDone\n         * @description Изменяет состояние завершённости объекта. (Завершён/Не завершён);\n         */\n\n    }, {\n        key: 'changeDone',\n        value: function changeDone() {\n            if (this.checkRemove()) {\n                return undefined;\n            } else if (this._done) {\n                this._done = false;\n            } else this._done = true;\n        }\n    }, {\n        key: 'id',\n        get: function get() {\n            return this._id;\n        },\n        set: function set(id) {\n            this._id = id;\n        }\n    }, {\n        key: 'parent',\n        get: function get() {\n            return this._parent;\n        },\n        set: function set(parentId) {\n            this._parent = parentId;\n        }\n    }, {\n        key: 'name',\n        get: function get() {\n            return this._name;\n        },\n        set: function set(name) {\n            this._name = name;\n        }\n    }, {\n        key: 'hasChildren',\n        get: function get() {\n            return this._hasChildren;\n        },\n        set: function set(haveBool) {\n            this._hasChildren = haveBool;\n        }\n    }, {\n        key: 'removed',\n        get: function get() {\n            return this._removed;\n        },\n        set: function set(haveBool) {\n            this._removed = haveBool;\n        }\n    }, {\n        key: 'done',\n        get: function get() {\n            return this._done;\n        },\n        set: function set(haveBool) {\n            this._done = haveBool;\n        }\n    }, {\n        key: 'description',\n        get: function get() {\n            return this._description;\n        },\n        set: function set(setDesc) {\n            this._description = setDesc;\n        }\n    }]);\n\n    return obj;\n}();\n\nfunction close(id){\n    document.getElementById(id).innerHTML=\"\";\n}\nvar bankLogic = new Vue({\n    data: {\n        data: (_JSON$parse = JSON.parse('[{ \"id\": 1,\"name\": \"Доска 1\",\"hasChildren\": true, \"done\": false, \"removed\": false},{\"id\": 2,\"parent\": 1,\"name\": \"Список задач 1.1\",\"hasChildren\": true, \"done\": false, \"removed\": false, \"description\": \"Сделать removeKebab 2.0\"},{ \"id\": 3,\"parent\": 2,\"name\": \"Задача 1.1.1\", \"done\": false, \"removed\": false, \"description\": \"Сделать removeAutism\"},{ \"id\": 4,\"parent\": 2,\"name\": \"Задача 1.1.2\", \"done\": true, \"removed\": false, \"description\": \"Сделать vue\"},{ \"id\": 9,\"parent\": 2,\"name\": \"Задача 1.1.3\", \"done\": false, \"removed\": false, \"description\": \"Заработать тут чекбох\"},{\"id\": 5,\"parent\": 1,\"name\": \"Список задач 1.2\",\"hasChildren\": true,\"description\":\"Сыграть в нарды с Моором\", \"done\": false, \"removed\": false},{ \"id\": 6,\"parent\": 5,\"name\": \"Задача 1.2.1\" , \"done\": false, \"removed\": false, \"description\":\"Почему чванство?\"},{ \"id\": 7,\"parent\": 5,\"name\": \"Задача 1.2.2\", \"done\": false, \"removed\": false, \"description\":\"Помогите\"},{\"id\": 8,\"parent\": 1,\"name\": \"Список задач 1.3\", \"done\": false, \"removed\": false, \"description\": \"Радоваться жизни\"},{\"id\": 10,\"name\": \"Доска 2\", \"done\": false, \"removed\": false}]'), _JSON$parse2 = _toArray(_JSON$parse), _JSON$parse),\n        counter: 0,\n        _currentId: 0,\n    },\n    methods: {\n        counterUp: function counterUp() {\n            return this.counter++;\n        },\n        counterReset: function counterReset() {\n            this.counter = 0;\n        },\n        currentId: {\n            get: function() {\n                return this._currentId;\n            },\n            set: function(receivedId) {\n                this._currentId = receivedId;\n            }\n        },\n    },\n})\nvar object;\n/**\n * @function\n * @name objBuilder_file\n * @description Строит объект из полученного JSON'а.\n * @param {number} ind индекс объекта;\n * @param {json} data передаваемый в функцию JSON;\n * @param {number} setid хранит в себе введённый идентификатор;\n * @param {number} setparent хранит в себе введённое значение;\n * @param {string} setname хранит в себе введённое имя;\n * @param {bool} hasChildren хранит в себе информацию о наличии дочерних элементов;\n * @param {bool} setremoved хранит в себе информацию о наличии «удаления»;\n * @public\n */\nfunction new_objBuilder_file(ind)\n{\n    object=[]\n    var i = 1;\n    var m = 1;\n    for(i; i < store.getters.todosCount+1 ; i++)\n    {\n        if(store.getters.getTodoById(i).parent == ind)\n        {\n            var element=new Vue({\n                data:{\n                    setid: store.getters.getTodoById(i).id,\n                    setparent: store.getters.getTodoById(i).parent,\n                    setname: store.getters.getTodoById(i).name,\n                    hasChildren: store.getters.getTodoById(i).hasChildren,\n                    setremoved: store.getters.getTodoById(i).removed,\n                    setdone: store.getters.getTodoById(i).done,\n                    setDesc: store.getters.getTodoById(i).description,\n                }\n            });\n            object[m]=element;\n            m++\n        }\n    }\n}\nfunction add(ind)\n{\n    let newid=store.getters.todosCount+1;\n    var style = prompt(\"Введите название нового элемента:\");\n        var element= [];\n           let setid = newid;\n            let setname= style;\n            let setparent=ind;\n            let hasChildren= 'false';\n            let setremoved= 'false';\n            let setdone='false';\n            let setDesc= \"New element\";\n            element= new obj(setid, setparent, setname, hasChildren, setremoved, setdone, setDesc);  \n    store.commit('newNote', element);\n    getChildren(new_objBuilder_file(ind));\n}\n/**\n * @function\n * @name load\n * @description «Функция-сразу» — выполняется, как только завершилась загрузка HTML-страницы.\n * Данная функция строит маркированный список из глобальной переменной data, добавляя кнопки удовлетворяющие различным условиям элементов;\n * Нажатия кнопок вызывают функции-цепочки, которые получают дальнейшие дочерние элементы, если они имеются;\n */\nfunction load() {\n    document.getElementById(\"boardList\").innerHTML += \"<ul>\";\n    var i = 1;\n    console.log(store.getters.todosCount);\n    console.log(store.getters.getTodoById(3))\n    for (i; i < store.getters.todosCount+1; i++) {\n        /** Выводит на страницу родительские элементы */\n        if (store.getters.getTodoById(i).parent == undefined) {\n            /** Добавляет кнопку изменения стиля */\n            document.getElementById(\"boardList\").innerHTML += \"<div class='desks' style='height:auto;' id='\" + store.getters.getTodoById(i).id + \"d\" + \"'>\" + store.getters.getTodoById(i).name + /** Списковый вывод имени */\n            //Пока не трогать \"<label><div class='greenCheck'><img src= 'content\\\\nar_yes.svg' onClick='doneChanger(\" + bankLogic.data[i].id + \")'></div></label>\" +/** Checkbox выполнения */\n            //\"<label><div class='redCheck'><img src= 'content\\\\nar_no.svg' onClick='deleteChanger(\" + bankLogic.data[i].id + \")'></div></label>\" + /** Checkbox удаления */\n            \"<button onClick='render(\" + store.getters.getTodoById(i).id + \")'>Изменить стиль</button></div>\"; /** Кнопка изменения стиля */\n            /** Если иммеет дочерние элементы, добавляет кнопку получения элементов. */\n            if (store.getters.getTodoById(i).hasChildren == true) {\n                document.getElementById(store.getters.getTodoById(i).id + \"d\").innerHTML += \"<button onClick='res(\" + store.getters.getTodoById(i).id + \")'>Открыть</button><button onClick='closeList.close(\"+'\"dot_' + store.getters.getTodoById(i).id +'\"'+ \")'>Закрыть</button></button><div style='margin:0 auto;' id='\" +\"dot_\"+ store.getters.getTodoById(i).id  + \"'></div>\";\n            }\n        }\n    }\n}\n/**\n * @function\n * @name render\n * @description Функция-управлятор — благодаря ей, пользователь может изменять стили определённого элемента в списке.\n * @param {number} x идентификатор эемента;\n */\nfunction render(x) {\n    var style = prompt(\"Введите стиль:\");\n    document.getElementById(x).setAttribute(\"style\", style);\n}\n/**\n * Документация скоро будет~\n */\nfunction res(id) {\n    document.getElementById(\"dot_\"+id).innerText = \"Loading...\";\n    store.commit('setCurrentId', id);\n    var ind = store.getters.currentId;\n    if (store.getters.getTodoById(ind).parent == undefined) {\n        if (document.getElementById(store.getters.currentId + \"d\").style.height == 'auto') {\n            document.getElementById(store.getters.currentId + \"d\").style.height = 'auto';\n            loadChildren(store.getters.currentId).then(getChildren);\n        } else {\n            document.getElementById(store.getters.currentId + \"d\").style.height = '0';\n            document.getElementById(\"dot_\"+store.getters.currentId).innerHTML = \"\";\n            return;\n        }\n    } else {\n        if (document.getElementById(\"p_\" + store.getters.currentId).style.height == 'auto') {\n            document.getElementById(\"p_\" + store.getters.currentId).style.height = 'auto';\n            loadChildren(store.getters.currentId).then(getChildren);\n        } else {\n            document.getElementById(\"p_\" + store.getters.currentId).style.height = '0';\n            document.getElementById(\"dot_\"+store.getters.currentId).innerHTML = \"\";\n            return;\n        }\n    }\n}\nfunction getChildren() {\n    //document.getElementById(\"dot_\"+object[0].setparent).innerHTML = \"\";\n    setTimeout(function () {\n        var meta = \"dot_\"+object[1].setparent;\n        document.getElementById(meta).innerText = \"\";\n        var i = 1;\n        for (i; i < object.length; i++) {\n            document.getElementById(meta).innerHTML += \"<div class='tasks' id=\" + \"p_\" +object[i].setid+ \" style='height:auto;'>\" + \"<li id='\" + object[i].setid + \"'>\" +\n            \"<span onClick='descriptionChanger(\" + object[i].setid +\")' >\" + object[i].setname + \"</span>\" + /** Списковый вывод имени и щёлк*/\n            \"<label><div class='greenCheck'><img src='content\\\\nar_yes.svg' onClick='doneChanger(\" + object[i].setid + \")'></div></label>\" + /** Checkbox выполнения */\n            \"<label><div class='redCheck'><img src='content\\\\nar_no.svg' onClick='deleteChanger(\" + object[i].setid + \")'></div></label>\" + /** Checkbox удаления */\n            \"<button onClick='render(\" + object[i].setid + \")'>Изменить стиль</button>\" + \"</li>\" + /** Кнопка изменения стиля */\n            \"<div id='\" + object[i].setid+ \"description' class='descriptionLogic'ondblclick='descChanger.changeDescription(\"+object[i].setid+\")' style='display: none;'>\" + object[i].setDesc + \"</div></div>\"; /** Описание */\n            var check=object[i].hasChildren;\n            console.log(object[i].setid);\n            if (check==true) {\n                document.getElementById(\"p_\" + object[i].setid).innerHTML += \"<button onClick='res(\" + object[i].setid + \")'>Открыть</button><button onClick='add(\"+object[i].setid+\")'>Добавить</button><button onClick='closeList.close(\"+'\"dot_' + object[i].setid +'\"'+ \")'>Закрыть</button><div style='margin:0 auto;margin-bottom:30px;' id='\" + (\"dot_\"+object[i].setid) + \"'></div><hr>\";\n            }\n        }\n    }, 1000);\n}\nfunction loadChildren(id) {\n    return new Promise(function (resolve, reject) {\n        var i = id;\n        for (i; i < store.getters.todosCount; i++) {\n            if (store.getters.getTodoById(i).hasChildren == true) {\n                resolve(new_objBuilder_file(store.getters.getTodoById(i).id));\n                return;\n            }\n        }\n    });\n}\n/**\n * @param {object} colorChecker\n * @description Надзиратель за цветом.\n * @param {number} counterArrays Счётчик массивов, связующее звено между массивом идентификаторов и массивом цветов.\n * @param {Array} idArray Числовой массив, хранит в себе идентификаторы.\n * @param {Array} currentColor Строковый массив, хранит в себе текущий цвет элемента, чей идентификатор находится на той же позиции в idArray.\n * @param {Array} colors Массив возможных цветов.\n * @property {method} masFinder\n * @property {method} changerColor\n * @protected\n * @public\n */\nvar colorChecker = new Vue({\n    data: {\n        counterArrays: 0,\n        idArray: [],\n        currentColor: [],\n        colors: [\"black\", \"green\", \"red\"],\n    },\n    methods: {\n        changerColor: function (id, whatColor) {\n            var i = 0;\n            for (i; i <= this.counterArrays; i++) {\n                if (this.idArray[i] == id) {\n                    if (this.currentColor[i] == whatColor) {\n                        this.currentColor[i] = \"black\";\n                        if (whatColor == \"green\") {\n                            store.getters.getTodoById(id).done = false;\n                        } else {\n                            store.getters.getTodoById(id).removed = false;\n                        }\n                        return document.getElementById(id.toString()).setAttribute(\"style\", \"color:black\");\n                    } else if (this.currentColor[i] == \"black\") {\n                        this.currentColor[i] = whatColor;\n                        if (whatColor == \"green\") {\n                            store.getters.getTodoById(id).done = true;\n                        } else {\n                           store.getters.getTodoById(id).removed = true;\n                        }\n                        return document.getElementById(id.toString()).setAttribute(\"style\", \"color: \" + whatColor);\n                    } else {\n                        if (this.currentColor[i] == \"green\") {\n                            store.getters.getTodoById(id).done = false;\n                            store.getters.getTodoById(id).removed = true;\n                            document.getElementById(id.toString()).setAttribute(\"style\", \"color: \" + whatColor);\n                        } else {\n                            store.getters.getTodoById(id).done = true;\n                            store.getters.getTodoById(id).removed = false;\n                            document.getElementById(id.toString()).setAttribute(\"style\", \"color: \" + whatColor);\n                        }\n                        return this.currentColor[i] = whatColor;\n                    }\n                } else if (i == this.counterArrays) {\n                    this.idArray[this.counterArrays] = id;\n                    this.currentColor[this.counterArrays] = whatColor;\n                    this.counterArrays++;\n                    if (whatColor == \"green\") {\n                        store.getters.getTodoById(id).done = true;\n                    } else {\n                        store.getters.getTodoById(id).removed = true;\n                    }\n                    return document.getElementById(id.toString()).setAttribute(\"style\", \"color: \" + whatColor);\n                }\n            }\n        },\n    },\n})\n/**\n * @function\n * @name doneChanger\n * @description Событие, когда кликаешь на зелёные чекбоксы.\n * @param {number} x Идентификатор объекта.\n */\nfunction doneChanger(x) {\n    colorChecker.changerColor(x, \"green\");\n}\n\nvar closeList =new Vue({\n    methods: {\n        close:function(id){\n            document.getElementById(id).innerHTML = \"\";\n        }\n    }\n})\n\n/**\n * @function\n * @name deleteChanger\n * @description Событие, когда кликаешь на красные чекбоксы.\n * @param {number} x Идентификатор объекта.\n */\nfunction deleteChanger(x) {\n    colorChecker.changerColor(x, \"red\");\n}\nvar descChanger = {\n    arrCounter: 0,\n    openerArray: [],\n    boolArray: [],\n    descriptionLogic: function descriptionLogic(objectId) {\n        let i = 0;\n        while (i <= this.arrCounter) {\n            if (this.openerArray[i] == objectId) {\n                if (this.boolArray[i]) {\n                    this.boolArray[i] = false;\n                    return document.getElementById(objectId + 'description').style = \"display: none\";\n                }\n                else {\n                    this.boolArray[i] = true;\n                    return document.getElementById(objectId + 'description').style = \"display: block\";\n                }\n            }\n            i++;\n        }\n        if (i > this.arrCounter) {\n            this.openerArray[this.arrCounter] = objectId;\n            this.boolArray[this.arrCounter] = true;\n            this.arrCounter++;\n            return document.getElementById(objectId + 'description').style = \"display: block\";\n        }\n    },\n    changeDescription :function(id){\n        var newDesc = prompt(\"Введите новое описание\");\n        store.getters.getTodoById(id).description = newDesc;\n        var idDesc = id+\"description\";\n        document.getElementById(idDesc).innerText = newDesc;\n    }\n};\nfunction descriptionChanger(objectId){\n    descChanger.descriptionLogic(objectId);\n}\n"]}]}