{"remainingRequest":"C:\\Users\\stud0000206420\\Documents\\GitHub\\nardy_MOORA1\\FINAL_BUTNOTFINAL\\my-app\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\stud0000206420\\Documents\\GitHub\\nardy_MOORA1\\FINAL_BUTNOTFINAL\\my-app\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\stud0000206420\\Documents\\GitHub\\nardy_MOORA1\\FINAL_BUTNOTFINAL\\my-app\\src\\store.js","dependencies":[{"path":"C:\\Users\\stud0000206420\\Documents\\GitHub\\nardy_MOORA1\\FINAL_BUTNOTFINAL\\my-app\\src\\store.js","mtime":1557208049773},{"path":"C:\\Users\\stud0000206420\\Documents\\GitHub\\nardy_MOORA1\\FINAL_BUTNOTFINAL\\my-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1557076938115},{"path":"C:\\Users\\stud0000206420\\Documents\\GitHub\\nardy_MOORA1\\FINAL_BUTNOTFINAL\\my-app\\node_modules\\babel-loader\\lib\\index.js","mtime":1557076937621},{"path":"C:\\Users\\stud0000206420\\Documents\\GitHub\\nardy_MOORA1\\FINAL_BUTNOTFINAL\\my-app\\node_modules\\eslint-loader\\index.js","mtime":1557076942625}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.find\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\nexport var store = new Vuex.Store({\n  state: {\n    todos: [{\n      \"id\": 1,\n      \"name\": \"Доска 1\",\n      \"parent\": 0,\n      \"hasChildren\": true,\n      \"done\": true,\n      \"removed\": false\n    }, {\n      \"id\": 2,\n      \"parent\": 1,\n      \"name\": \"Список задач 1.1\",\n      \"hasChildren\": true,\n      \"done\": true,\n      \"removed\": false,\n      \"description\": \"Сделать removeKebab 2.0\"\n    }, {\n      \"id\": 3,\n      \"parent\": 2,\n      \"name\": \"Задача 1.1.1\",\n      \"done\": false,\n      \"removed\": false,\n      \"description\": \"Сделать removeAutism\"\n    }, {\n      \"id\": 4,\n      \"parent\": 2,\n      \"name\": \"Задача 1.1.2\",\n      \"done\": true,\n      \"removed\": false,\n      \"description\": \"Сделать vue\"\n    }, {\n      \"id\": 9,\n      \"parent\": 2,\n      \"name\": \"Задача 1.1.3\",\n      \"done\": false,\n      \"removed\": false,\n      \"description\": \"Заработать тут чекбох\"\n    }, {\n      \"id\": 5,\n      \"parent\": 1,\n      \"name\": \"Список задач 1.2\",\n      \"hasChildren\": true,\n      \"done\": false,\n      \"description\": \"Чтобы ровно было уменя на столе до обеда!\",\n      \"removed\": false\n    }, {\n      \"id\": 6,\n      \"parent\": 5,\n      \"name\": \"Задача 1.2.1\",\n      \"done\": false,\n      \"removed\": false\n    }, {\n      \"id\": 7,\n      \"parent\": 5,\n      \"name\": \"Задача 1.2.2\",\n      \"done\": false,\n      \"removed\": false\n    }, {\n      \"id\": 8,\n      \"parent\": 1,\n      \"name\": \"Список задач 1.3\",\n      \"done\": false,\n      \"removed\": false,\n      \"description\": \"Радоваться жизни\"\n    }],\n    currentId: 0\n  },\n  getters: {\n    getTodoById: function getTodoById(state) {\n      return function (id) {\n        return state.todos.find(function (todo) {\n          return todo.id === id;\n        });\n      };\n    },\n    todosCount: function todosCount(state) {\n      return state.todos.length;\n    },\n    currentId: function currentId(state) {\n      return state.currentId;\n    },\n    todos: function todos(state) {\n      return state.todos;\n    },\n    getdesk: function getdesk(state) {\n      return state.todos.filter(function (todos) {\n        return todos.parent === 0;\n      });\n    },\n    getChildren: function getChildren(state) {\n      return function (id) {\n        return state.todos.filter(function (todos) {\n          return todos.parent === id;\n        });\n      };\n    } //прописать методы взаимодействия \n\n  },\n  mutations: {\n    setCurrentId: function setCurrentId(state, id) {\n      state.currentId = id; //прописать мутации и коммиты\n    },\n    newNote: function newNote(state, payload) {\n      function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n          throw new TypeError(\"Cannot call a class as a function\");\n        }\n      }\n\n      var _createClass = function () {\n        function defineProperties(target, props) {\n          for (var i = 0; i < props.length; i++) {\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, descriptor.key, descriptor);\n          }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n          if (protoProps) defineProperties(Constructor.prototype, protoProps);\n          if (staticProps) defineProperties(Constructor, staticProps);\n          return Constructor;\n        };\n      }();\n\n      var obj = function () {\n        function obj(id, parent, name, hasChildren, removed, done, description) {\n          _classCallCheck(this, obj);\n\n          this._id = id;\n          this._parent = parent;\n          this._name = name;\n          this._hasChildren = hasChildren;\n          this._removed = removed;\n          this._done = done;\n          this._description = description;\n        }\n\n        _createClass(obj, [{\n          key: 'read',\n\n          /**\r\n           * @method\r\n           * @memberof obj\r\n           * @name read\r\n           * @description Производит чтение всех свойств элемента, если передан ключ, производит чтение определённого свойства объекта.\r\n           * @param {undefined | string} key не содержит|содержит в себе имя ключа;\r\n           * @returns {undefined | null | string} undefined — если объект помечен на удаление;\r\n           * Если переданного ключа не существует, то возвращает null;\r\n           * Если, передан без ключа, то строку, содержащую в себе ключи элемента;\r\n          */\n          value: function read(key) {\n            if (this.checkRemove()) return undefined;else {\n              if (key === undefined) {\n                return this._name + '; ' + this._parent + '; ' + this._id + '; ' + this._hasChildren + '; ' + this._done + '; \\n' + this._description;\n              } else if (key == 'id') {\n                return this._id;\n              } else if (key == 'parent') {\n                return this._parent;\n              } else if (key == 'name') {\n                return this._name;\n              } else if (key == 'hasChildren') {\n                return this._hasChildren;\n              } else if (key == 'removed') {\n                return this._removed;\n              } else if (key == 'done') {\n                return this._done;\n              } else if (key == 'description') {\n                return this._description;\n              } else return null;\n            }\n          }\n          /**\r\n           * @method\r\n           * @memberof obj\r\n           * @name update\r\n           * @description Получает обновлённый объект и изменяет ключи на ключи полученного объекта.\r\n           * @param {object} updObj обновлённый объект;\r\n           */\n\n        }, {\n          key: 'update',\n          value: function update(updObj) {\n            if (this.checkRemove()) {\n              return undefined;\n            } else Object.assign(this, updObj);\n          }\n          /**\r\n           * @method\r\n           * @memberof obj\r\n           * @name delete\r\n           * @description Помечает объект на удаление, после этого он выводиться в списках не будет.\r\n           */\n\n        }, {\n          key: 'delete',\n          value: function _delete() {\n            this._removed = true;\n          }\n          /**\r\n           * @method\r\n           * @memberof obj\r\n           * @name checkRemove\r\n           * @description Метод, проверяющий помечен ли объект на удаление, или нет.\r\n           * @return {bool};\r\n           */\n\n        }, {\n          key: 'checkRemove',\n          value: function checkRemove() {\n            if (this._removed) return true;else return false;\n          }\n          /**\r\n           * @method\r\n           * @memberof obj\r\n           * @name changeDone\r\n           * @description Изменяет состояние завершённости объекта. (Завершён/Не завершён);\r\n           */\n\n        }, {\n          key: 'changeDone',\n          value: function changeDone() {\n            if (this.checkRemove()) {\n              return undefined;\n            } else if (this._done) {\n              this._done = false;\n            } else this._done = true;\n          }\n        }, {\n          key: 'id',\n          get: function get() {\n            return this._id;\n          },\n          set: function set(id) {\n            this._id = id;\n          }\n        }, {\n          key: 'parent',\n          get: function get() {\n            return this._parent;\n          },\n          set: function set(parentId) {\n            this._parent = parentId;\n          }\n        }, {\n          key: 'name',\n          get: function get() {\n            return this._name;\n          },\n          set: function set(name) {\n            this._name = name;\n          }\n        }, {\n          key: 'hasChildren',\n          get: function get() {\n            return this._hasChildren;\n          },\n          set: function set(haveBool) {\n            this._hasChildren = haveBool;\n          }\n        }, {\n          key: 'removed',\n          get: function get() {\n            return this._removed;\n          },\n          set: function set(haveBool) {\n            this._removed = haveBool;\n          }\n        }, {\n          key: 'done',\n          get: function get() {\n            return this._done;\n          },\n          set: function set(haveBool) {\n            this._done = haveBool;\n          }\n        }, {\n          key: 'description',\n          get: function get() {\n            return this._description;\n          },\n          set: function set(setDesc) {\n            this._description = setDesc;\n          }\n        }]);\n\n        return obj;\n      }();\n\n      var newid = store.getters.todosCount + 1;\n      var style = payload.name;\n      var description = payload.description;\n      var id = payload.id;\n      var element = [];\n      var setid = newid;\n      var setname = style;\n      var setparent = 1;\n      var hasChildren = 'false';\n      var setremoved = 'false';\n      var setdone = 'false';\n      var setDesc = description;\n      element = new obj(setid, setparent, setname, hasChildren, setremoved, setdone, setDesc);\n      state.todos.push(element);\n    },\n    delNote: function delNote(state, id) {\n      state.todos.splice(state.todos.findIndex(function (todo) {\n        return todo.id === id;\n      }), 1);\n    }\n  },\n  actions: {\n    del: function del(_ref, id) {\n      var commit = _ref.commit;\n      commit('delNote', id);\n    },\n    add: function add(_ref2, name, description) {\n      var commit = _ref2.commit;\n      commit('newNote', name, description);\n    }\n  }\n});",{"version":3,"sources":["C:\\Users\\stud0000206420\\Documents\\GitHub\\nardy_MOORA1\\FINAL_BUTNOTFINAL\\my-app\\src\\store.js"],"names":["Vue","Vuex","use","store","Store","state","todos","currentId","getters","getTodoById","id","find","todo","todosCount","length","getdesk","filter","parent","getChildren","mutations","setCurrentId","newNote","payload","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","obj","name","hasChildren","removed","done","description","_id","_parent","_name","_hasChildren","_removed","_done","_description","value","read","checkRemove","undefined","update","updObj","assign","_delete","changeDone","get","set","parentId","haveBool","setDesc","newid","style","element","setid","setname","setparent","setremoved","setdone","push","delNote","splice","findIndex","actions","del","commit","add"],"mappings":"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","sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\n\r\nVue.use(Vuex)\r\n\r\nexport const store = new Vuex.Store({\r\n  state: {\r\n    todos: [\r\n    { \"id\": 1,\"name\": \"Доска 1\", \"parent\": 0,\"hasChildren\": true, \"done\": true, \"removed\": false},\r\n    { \"id\": 2,\"parent\": 1,\"name\": \"Список задач 1.1\",\"hasChildren\": true, \"done\": true, \"removed\": false, \"description\": \"Сделать removeKebab 2.0\"},\r\n    { \"id\": 3,\"parent\": 2,\"name\": \"Задача 1.1.1\", \"done\": false, \"removed\": false, \"description\": \"Сделать removeAutism\"},\r\n    { \"id\": 4,\"parent\": 2,\"name\": \"Задача 1.1.2\", \"done\": true, \"removed\": false, \"description\": \"Сделать vue\"},\r\n    { \"id\": 9,\"parent\": 2,\"name\": \"Задача 1.1.3\", \"done\": false, \"removed\": false, \"description\": \"Заработать тут чекбох\"},\r\n    { \"id\": 5,\"parent\": 1,\"name\": \"Список задач 1.2\",\"hasChildren\": true, \"done\": false,\"description\": \"Чтобы ровно было уменя на столе до обеда!\", \"removed\": false},\r\n    { \"id\": 6,\"parent\": 5,\"name\": \"Задача 1.2.1\" , \"done\": false, \"removed\": false},\r\n    { \"id\": 7,\"parent\": 5,\"name\": \"Задача 1.2.2\", \"done\": false, \"removed\": false },\r\n    { \"id\": 8,\"parent\": 1,\"name\": \"Список задач 1.3\", \"done\": false, \"removed\": false, \"description\": \"Радоваться жизни\"},\r\n    ],\r\n    currentId: 0\r\n  },\r\n  getters: {\r\n    getTodoById: state => id => {\r\n      return state.todos.find(todo => todo.id === id);\r\n    },\r\n    todosCount: state => {\r\n      return state.todos.length;\r\n    },\r\n    currentId: state => {\r\n      return state.currentId;\r\n    },\r\n    todos: state => {\r\n      return state.todos;\r\n    },\r\n    getdesk: state => {\r\n      return state.todos.filter(todos=>todos.parent === 0)\r\n    },\r\n    getChildren: state => id=>{\r\n      return state.todos.filter(todos=>todos.parent === id)\r\n    }\r\n    //прописать методы взаимодействия \r\n  },\r\n  mutations: {\r\n    setCurrentId(state, id) {\r\n      state.currentId = id;\r\n      //прописать мутации и коммиты\r\n    },\r\n    newNote(state, payload) {\r\n      function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\r\n      var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\r\n        var obj = function () {\r\n    function obj(id, parent, name, hasChildren, removed, done, description) {\r\n        _classCallCheck(this, obj);\r\n\r\n        this._id = id;\r\n        this._parent = parent;\r\n        this._name = name;\r\n        this._hasChildren = hasChildren;\r\n        this._removed = removed;\r\n        this._done = done;\r\n        this._description = description;\r\n    }\r\n\r\n    _createClass(obj, [{\r\n        key: 'read',\r\n\r\n        /**\r\n         * @method\r\n         * @memberof obj\r\n         * @name read\r\n         * @description Производит чтение всех свойств элемента, если передан ключ, производит чтение определённого свойства объекта.\r\n         * @param {undefined | string} key не содержит|содержит в себе имя ключа;\r\n         * @returns {undefined | null | string} undefined — если объект помечен на удаление;\r\n         * Если переданного ключа не существует, то возвращает null;\r\n         * Если, передан без ключа, то строку, содержащую в себе ключи элемента;\r\n        */\r\n        value: function read(key) {\r\n            if (this.checkRemove()) return undefined;else {\r\n                if (key === undefined) {\r\n                    return this._name + '; ' + this._parent + '; ' + this._id + '; ' + this._hasChildren + '; ' + this._done + '; \\n' + this._description;\r\n                } else if (key == 'id') {\r\n                    return this._id;\r\n                } else if (key == 'parent') {\r\n                    return this._parent;\r\n                } else if (key == 'name') {\r\n                    return this._name;\r\n                } else if (key == 'hasChildren') {\r\n                    return this._hasChildren;\r\n                } else if (key == 'removed') {\r\n                    return this._removed;\r\n                } else if (key == 'done') {\r\n                    return this._done;\r\n                } else if (key == 'description') {\r\n                    return this._description;\r\n                } else return null;\r\n            }\r\n        }\r\n        /**\r\n         * @method\r\n         * @memberof obj\r\n         * @name update\r\n         * @description Получает обновлённый объект и изменяет ключи на ключи полученного объекта.\r\n         * @param {object} updObj обновлённый объект;\r\n         */\r\n\r\n    }, {\r\n        key: 'update',\r\n        value: function update(updObj) {\r\n            if (this.checkRemove()) {\r\n                return undefined;\r\n            } else Object.assign(this, updObj);\r\n        }\r\n        /**\r\n         * @method\r\n         * @memberof obj\r\n         * @name delete\r\n         * @description Помечает объект на удаление, после этого он выводиться в списках не будет.\r\n         */\r\n\r\n    }, {\r\n        key: 'delete',\r\n        value: function _delete() {\r\n            this._removed = true;\r\n        }\r\n        /**\r\n         * @method\r\n         * @memberof obj\r\n         * @name checkRemove\r\n         * @description Метод, проверяющий помечен ли объект на удаление, или нет.\r\n         * @return {bool};\r\n         */\r\n\r\n    }, {\r\n        key: 'checkRemove',\r\n        value: function checkRemove() {\r\n            if (this._removed) return true;else return false;\r\n        }\r\n        /**\r\n         * @method\r\n         * @memberof obj\r\n         * @name changeDone\r\n         * @description Изменяет состояние завершённости объекта. (Завершён/Не завершён);\r\n         */\r\n\r\n    }, {\r\n        key: 'changeDone',\r\n        value: function changeDone() {\r\n            if (this.checkRemove()) {\r\n                return undefined;\r\n            } else if (this._done) {\r\n                this._done = false;\r\n            } else this._done = true;\r\n        }\r\n    }, {\r\n        key: 'id',\r\n        get: function get() {\r\n            return this._id;\r\n        },\r\n        set: function set(id) {\r\n            this._id = id;\r\n        }\r\n    }, {\r\n        key: 'parent',\r\n        get: function get() {\r\n            return this._parent;\r\n        },\r\n        set: function set(parentId) {\r\n            this._parent = parentId;\r\n        }\r\n    }, {\r\n        key: 'name',\r\n        get: function get() {\r\n            return this._name;\r\n        },\r\n        set: function set(name) {\r\n            this._name = name;\r\n        }\r\n    }, {\r\n        key: 'hasChildren',\r\n        get: function get() {\r\n            return this._hasChildren;\r\n        },\r\n        set: function set(haveBool) {\r\n            this._hasChildren = haveBool;\r\n        }\r\n    }, {\r\n        key: 'removed',\r\n        get: function get() {\r\n            return this._removed;\r\n        },\r\n        set: function set(haveBool) {\r\n            this._removed = haveBool;\r\n        }\r\n    }, {\r\n        key: 'done',\r\n        get: function get() {\r\n            return this._done;\r\n        },\r\n        set: function set(haveBool) {\r\n            this._done = haveBool;\r\n        }\r\n    }, {\r\n        key: 'description',\r\n        get: function get() {\r\n            return this._description;\r\n        },\r\n        set: function set(setDesc) {\r\n            this._description = setDesc;\r\n        }\r\n    }]);\r\n\r\n    return obj;\r\n}();\r\n        let newid= store.getters.todosCount+1;\r\n        var style = payload.name;\r\n        var description = payload.description;\r\n        var id = payload.id;\r\n        var element= [];\r\n           let setid = newid;\r\n            let setname= style;\r\n            let setparent=1;\r\n            let hasChildren= 'false';\r\n            let setremoved= 'false';\r\n            let setdone='false';\r\n            let setDesc= description;\r\n            element= new obj(setid, setparent, setname, hasChildren, setremoved, setdone, setDesc); \r\n      state.todos.push(element);\r\n    },\r\n    delNote(state, id) {\r\n      state.todos.splice(state.todos.findIndex(todo => todo.id === id), 1);\r\n    }\r\n  },\r\n  actions: {\r\n    del ({commit}, id) {\r\n      commit('delNote', id)\r\n    },\r\n    add ({commit},name, description) {\r\n      commit('newNote',name, description)\r\n    }\r\n  },\r\n})\r\n"]}]}