{"remainingRequest":"C:\\Users\\stud0000206420\\Documents\\GitHub\\nardy_MOORA1\\FINAL_BUTNOTFINAL\\my-app\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\stud0000206420\\Documents\\GitHub\\nardy_MOORA1\\FINAL_BUTNOTFINAL\\my-app\\node_modules\\vuetify-loader\\lib\\loader.js!C:\\Users\\stud0000206420\\Documents\\GitHub\\nardy_MOORA1\\FINAL_BUTNOTFINAL\\my-app\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\stud0000206420\\Documents\\GitHub\\nardy_MOORA1\\FINAL_BUTNOTFINAL\\my-app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\stud0000206420\\Documents\\GitHub\\nardy_MOORA1\\FINAL_BUTNOTFINAL\\my-app\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\stud0000206420\\Documents\\GitHub\\nardy_MOORA1\\FINAL_BUTNOTFINAL\\my-app\\src\\App.vue","mtime":1558612843809},{"path":"C:\\Users\\stud0000206420\\Documents\\GitHub\\nardy_MOORA1\\FINAL_BUTNOTFINAL\\my-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558607016167},{"path":"C:\\Users\\stud0000206420\\Documents\\GitHub\\nardy_MOORA1\\FINAL_BUTNOTFINAL\\my-app\\node_modules\\babel-loader\\lib\\index.js","mtime":1558607014762},{"path":"C:\\Users\\stud0000206420\\Documents\\GitHub\\nardy_MOORA1\\FINAL_BUTNOTFINAL\\my-app\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1558607072732},{"path":"C:\\Users\\stud0000206420\\Documents\\GitHub\\nardy_MOORA1\\FINAL_BUTNOTFINAL\\my-app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558607016167},{"path":"C:\\Users\\stud0000206420\\Documents\\GitHub\\nardy_MOORA1\\FINAL_BUTNOTFINAL\\my-app\\node_modules\\vue-loader\\lib\\index.js","mtime":1558607072214}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.find\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      items: [{\n        icon: 'dashboard'\n      }],\n      description: \"\",\n      name: \"\",\n      current_Id: 1,\n      status: \"\",\n      show: false,\n      dialog1: false,\n      dialog2: false,\n      child_Show: false,\n      right: null\n    };\n  },\n  computed: {\n    menuItems: function menuItems() {\n      return [{\n        route: '/form'\n      }];\n    },\n    doneTodo: function doneTodo() {\n      return this.$store.state.todos.find(function (todo) {\n        return todo.done;\n      });\n    },\n    desks: function desks() {\n      return this.$store.getters.getdesk;\n    },\n    childrens: function childrens() {\n      return this.$store.state.todos.filter(function (todo) {\n        return todo.done === true;\n      });\n    },\n    childrens_childrens: function childrens_childrens() {\n      return this.$store.getters.getChildren(this.current_Id);\n    },\n    object: function object() {\n      return this.$store.getters.todos;\n    },\n    count: function count() {\n      return this.$store.getters.todosCount;\n    }\n  },\n  methods: {\n    del: function del(id) {\n      this.$store.dispatch('del', id);\n    },\n    changeColor: function changeColor(index) {\n      this.$store.state.todos.forEach(function (todo) {\n        if (todo.id === index) {\n          if (todo.color == 'white') {\n            todo.color = 'green lighten-4';\n          } else if (todo.color == 'green lighten-4') {\n            todo.color = 'white';\n          }\n        }\n      });\n    },\n    showTasks: function showTasks(index) {\n      this.$store.state.todos.forEach(function (todo) {\n        if (todo.id === index && todo.selectTasks == false) {\n          todo.selectTasks = true;\n        } else if (todo.id === index && todo.selectTasks == true) {\n          todo.selectTasks = false;\n        }\n      });\n    },\n    add: function add(name, description) {\n      this.$store.dispatch('add', name, description);\n    },\n    addDesk: function addDesk() {\n      this.$store.dispatch('addDesk', {\n        name: $this.nameDesk\n      });\n    },\n    toForm: function toForm() {\n      this.$router.push('/form');\n    },\n    disableAllTodos: function disableAllTodos() {\n      this.$store.state.todos.forEach(function (todo) {\n        return todo.done = false;\n      });\n    },\n    selectTodo: function selectTodo(groupIndex) {\n      this.disableAllTodos(); //this.selectedTask = null;\n\n      this.$store.state.todos.forEach(function (todo) {\n        if (todo.parent === groupIndex) {\n          todo.done = true;\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <v-app>\r\n    <v-toolbar app style=\"background-color: #03a9f4;z-index:1\">\r\n      <v-toolbar-title class=\"headline text-uppercase\" style=\"color: white\">\r\n        <span class=\"font-weight-bold\">NARDY MOORA </span>\r\n        <span class=\"font-weight-light\"> MATERIAL DESIGN</span>\r\n      </v-toolbar-title>\r\n      <v-spacer></v-spacer>\r\n      <v-dialog v-model=\"dialog1\" persistent max-width=\"600px\">\r\n        <template v-slot:activator=\"{ on }\">\r\n            <v-btn\r\n            color=\"#ef5350\"\r\n            dark\r\n            big7\r\n            absolute\r\n            bottom\r\n            right\r\n            fab\r\n            v-on=\"on\">\r\n            <v-icon>add</v-icon>\r\n          </v-btn>\r\n        </template>\r\n        <v-card>\r\n          <v-card-title>\r\n            <span class=\"headline\">Новая задача</span>\r\n          </v-card-title>\r\n          <v-card-text>\r\n            <v-container grid-list-md>\r\n              <v-layout wrap>\r\n\r\n                <v-flex xs12 sm6>\r\n                  <v-text-field v-model=\"name\" label=\"Название задачи*\" required></v-text-field>\r\n                </v-flex>\r\n                <v-flex xs12>\r\n                  <v-text-field v-model=\"description\" label=\"Описание задачи\"></v-text-field>\r\n                </v-flex>\r\n\r\n              </v-layout>\r\n            </v-container>\r\n            <small>*поля, отмеченные звездочкой, обязательны для заполнения</small>\r\n          </v-card-text>\r\n          <v-card-actions>\r\n            <v-spacer></v-spacer>\r\n            <v-btn color=\"blue darken-1\" flat @click=\"dialog1 = false\">Закрыть</v-btn>\r\n            <v-btn color=\"blue darken-1\" flat @click=\"dialog1 = false, add({name, description}), selectTodo(1)\">Сохранить</v-btn>\r\n          </v-card-actions>\r\n        </v-card>\r\n      </v-dialog>\r\n\r\n    </v-toolbar >\r\n\r\n    <v-content id=\"boardlist\">\r\n      <v-layout style=\"height:100%;\">\r\n        <v-navigation-drawer style=\"z-index:0;\">\r\n            <v-toolbar flat>\r\n              <v-list>\r\n                <v-list-tile>\r\n                  <v-list-tile-title class=\"title\">\r\n                    Список досок\r\n                  </v-list-tile-title>\r\n                </v-list-tile>\r\n              </v-list>\r\n            </v-toolbar>\r\n\r\n          <v-divider></v-divider>\r\n  \r\n          <v-list dense class=\"pt-0\">\r\n            <v-list-tile\r\n              v-for=\"(todo, id) in desks\"\r\n              :key=\"id\"\r\n              @click=\"selectTodo(id+1)\"\r\n              >\r\n              <v-list-tile-action>\r\n                <v-icon\r\n                v-for=\"icon in items\"\r\n                :key=\"icon.icon\"\r\n                >{{icon.icon}}</v-icon>\r\n              </v-list-tile-action>\r\n      \r\n              <v-list-tile-content>\r\n                <v-list-tile-title>{{ todo.name }}</v-list-tile-title>\r\n              </v-list-tile-content>\r\n            </v-list-tile>\r\n            \r\n            <v-dialog v-model=\"dialog2\" persistent max-width=\"600px\">\r\n              <template v-slot:activator=\"{ on }\">\r\n              <v-btn flat color=\"purple\" dark v-on=\"on\">Добавить</v-btn>\r\n              </template>\r\n            <v-card>\r\n          <v-card-title>\r\n            <span class=\"headline\">Создать доску</span>\r\n          </v-card-title>\r\n          <v-card-text>\r\n            <v-container grid-list-md>\r\n              <v-layout wrap>\r\n                <v-flex xs12>\r\n                  <v-text-field v-model=\"nameDesk\" label=\"Доска*\" required></v-text-field>\r\n                </v-flex>\r\n              </v-layout>\r\n            </v-container>\r\n          </v-card-text>\r\n          <v-card-actions>\r\n            <v-spacer></v-spacer>\r\n            <v-btn color=\"blue darken-1\" flat @click=\"dialog2 = false\">Закрыть</v-btn>\r\n            <v-btn color=\"blue darken-1\" flat  @click=\" addDesk, dialog2 = false\">Добавить</v-btn>\r\n          </v-card-actions>\r\n        </v-card> \r\n            </v-dialog>\r\n          </v-list>\r\n        </v-navigation-drawer>\r\n\r\n        <v-layout  d-{flex} v-if=\"doneTodo\"  align-start  row wrap>\r\n\r\n            \r\n          \r\n          <v-card\r\n            v-for=\"(obj, id) in childrens\"\r\n            :class=obj.color\r\n            :key=\"id\"\r\n           \r\n            style=\"margin-top:10px; width:300px;margin-left:10px\"\r\n            >\r\n            \r\n            <v-card-title primary-title>\r\n              <div>\r\n                <div class=\"headline\" >{{obj.name}}</div>\r\n                <span class=\"grey--text\"></span>\r\n              </div>\r\n\r\n              <div class=\"text-xs-center\" v-if=\"child_Show == false\">\r\n              </div>\r\n               <v-btn outline fab small absolute right color=\"blue\" @click=\"showTasks(obj.id)\">\r\n        <v-icon>list</v-icon>\r\n      </v-btn>\r\n            </v-card-title>\r\n\r\n            <v-slide-y-transition>\r\n              <v-card-text  style=\"margin-top: -22px;\">\r\n                {{obj.description}}\r\n              </v-card-text>\r\n            </v-slide-y-transition>\r\n            \r\n            <v-hover v-if=\"obj.selectTasks\"\r\n             v-for=\"(object,name) in obj.tasks\" :key=\"name\"\r\n            >\r\n              <v-card \r\n                slot-scope=\"{ hover }\"\r\n                :class=\"`elevation-${hover ? 12 : 2}`\"\r\n                class=\"mx-auto\"\r\n                width=\"269\"\r\n                style=\"margin-bottom: 8px;\"\r\n                >\r\n                <v-card-title>\r\n                  <div>\r\n                    <span style=\"font-size: 10pt;\">{{object.name}}</span>\r\n                  </div>\r\n                  <v-spacer></v-spacer>\r\n                </v-card-title>\r\n              </v-card>\r\n            </v-hover>\r\n            \r\n\r\n            <v-card-actions>\r\n              <v-spacer></v-spacer>\r\n              <v-btn outline fab small color=\"green\"\r\n              @click=\"changeColor(obj.id)\"><v-icon medium>done</v-icon></v-btn>\r\n              <v-spacer></v-spacer>\r\n              <v-btn outline fab small color=\"red\"\r\n              @click=\"del(obj.id)\"><v-icon medium>delete</v-icon></v-btn>\r\n              <v-spacer></v-spacer>\r\n              \r\n            </v-card-actions>\r\n          </v-card>\r\n\r\n        </v-layout>\r\n      </v-layout>\r\n    </v-content>\r\n  </v-app>\r\n</template>\r\n<script>\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        items: [\r\n          { icon: 'dashboard' }\r\n        ],\r\n        description: \"\",\r\n        name:\"\",\r\n        current_Id: 1,\r\n        status: \"\",\r\n        show: false,\r\n         dialog1: false,\r\n         dialog2: false,\r\n        child_Show: false,\r\n        right: null\r\n      }\r\n    },\r\n    computed: {\r\n      menuItems(){\r\n        return[\r\n          {\r\n            route:'/form',\r\n          }\r\n        ]\r\n      },\r\n      doneTodo() {\r\n            return this.$store.state.todos.find(todo => todo.done);\r\n        },\r\n      desks() {\r\n        return this.$store.getters.getdesk;\r\n      },\r\n      childrens() {\r\n        return this.$store.state.todos.filter(todo=>todo.done===true);\r\n      },\r\n      childrens_childrens() {\r\n        return this.$store.getters.getChildren(this.current_Id);\r\n      },\r\n      object() {\r\n        return this.$store.getters.todos;\r\n      },\r\n      count() {\r\n        return this.$store.getters.todosCount;\r\n      }\r\n    },\r\n    methods: {\r\n      del:function(id) {\r\n        this.$store.dispatch('del',id);\r\n      },\r\n      changeColor:function(index)\r\n      {\r\n        this.$store.state.todos.forEach(todo => {\r\n              if(todo.id===index)\r\n              {\r\n                if(todo.color=='white')\r\n                {\r\n                 todo.color = 'green lighten-4';\r\n                }\r\n                else if(todo.color=='green lighten-4')\r\n                {\r\n                  todo.color = 'white';\r\n                }\r\n              }\r\n            });\r\n      },\r\n      showTasks:function(index){\r\n         this.$store.state.todos.forEach(todo => {\r\n              if(todo.id=== index&&todo.selectTasks == false)\r\n              {\r\n                 todo.selectTasks = true;\r\n              }\r\n              else if(todo.id=== index&&todo.selectTasks == true)\r\n               {\r\n                 todo.selectTasks = false;\r\n              }\r\n            });\r\n      },\r\n      add:function(name, description) {\r\n        this.$store.dispatch('add',name, description);\r\n      },\r\n      addDesk: function(){\r\n        this.$store.dispatch('addDesk', {name: $this.nameDesk})\r\n      },\r\n      toForm:function()\r\n      {\r\n        this.$router.push('/form');\r\n      },\r\n       disableAllTodos() {\r\n            this.$store.state.todos.forEach(todo => todo.done = false);\r\n        },\r\n      selectTodo(groupIndex) {\r\n            this.disableAllTodos();\r\n            //this.selectedTask = null;\r\n            this.$store.state.todos.forEach(todo => {\r\n              if(todo.parent===groupIndex)\r\n              {\r\n                 todo.done = true;\r\n              }\r\n            });\r\n            \r\n        },\r\n    }\r\n  }\r\n\r\n\r\n</script>\r\n\r\n<style>\r\n  .white {\r\n   background-color: white;\r\n}\r\n\r\n</style>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":"src"}]}